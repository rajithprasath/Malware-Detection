package sliit.ranjitha.malwaredetector.model;

import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PermissionInfo;
import android.os.Build;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;



public class PermissionsService {


    public final PermissionDataAggregate get(PackageInfo packageInfo, PackageManager packageManager) {
        List<PermissionData> definedPermissions = this.getDefinedPermissions(packageInfo);
        System.out.println("shshshshshshhshshshhs 1111111 " + definedPermissions.size());
        List<UsedPermissionData> usedPermissions = this.getUsedPermissions(packageInfo, packageManager);
        System.out.println("shshshshshshhshshshhs 2222 " + usedPermissions.size());
        return new PermissionDataAggregate(definedPermissions, usedPermissions);
    }

    private final List<PermissionData> getDefinedPermissions(PackageInfo packageInfo) {
        List<PermissionData> permissionDataList = new ArrayList<>();
        if(packageInfo.permissions == null){
            return permissionDataList;
        }
        System.out.println("shshshshshshhshshshhs 3333333 " + packageInfo.permissions.length);

        for (int i = 0; i <packageInfo.permissions.length ; i++) {
           PermissionInfo permissionInfo = packageInfo.permissions[i];
           PermissionData permissionData = new PermissionData(permissionInfo.name,permissionInfo.name,permissionInfo.group,permissionInfo.protectionLevel);
            permissionDataList.add(permissionData);
        }
            return permissionDataList;
        }


    public final List<UsedPermissionData> getUsedPermissions(PackageInfo packageInfo, PackageManager packageManager) {

        String[] requestedPermissionsList = packageInfo.requestedPermissions;
        if (requestedPermissionsList == null) {
            System.out.println("shshshshshshhshshshhs 4444444 " );
            return (List)(new ArrayList(0));
        } else {
            System.out.println("shshshshshshhshshshhs 55555555 " );
            int[] requestedPermissionFlags = Build.VERSION.SDK_INT >= 16 ? packageInfo.requestedPermissionsFlags : new int[0];
            List<UsedPermissionData> requestedPermissions = new ArrayList(requestedPermissionsList.length);

            for (int i = 0; i < requestedPermissionsList.length; i++) {
                String name = requestedPermissionsList[i];

                boolean  isGranted = Build.VERSION.SDK_INT >= 16 && (requestedPermissionFlags[i] & 2) != 0;
                PermissionData permissionData;
                try {
                    PermissionInfo permissionInfo = packageManager.getPermissionInfo(name, PackageManager.GET_META_DATA);
                    permissionData = new PermissionData(name, name, permissionInfo.group, permissionInfo.protectionLevel);
                } catch (Exception e) {
                    System.out.println("shshshshshshhshshshhs 55555555 " );
                    permissionData = new PermissionData(name, name, "", 0);
                }

                requestedPermissions.add(new UsedPermissionData(permissionData,isGranted));
            }

            return requestedPermissions;
        }
    }

}
