package sliit.ranjitha.malwaredetector.model;

import android.os.Parcel;
import android.os.Parcelable;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

public class PermissionDataAggregate implements Parcelable {

    private final List<PermissionData> definesPermissions;
    private final List<UsedPermissionData> usesPermissions;
    public static final android.os.Parcelable.Creator CREATOR = new PermissionDataAggregate.Creator();

    public PermissionDataAggregate( List<PermissionData> definesPermissions, List<UsedPermissionData> usesPermissions) {
        super();
        this.definesPermissions = definesPermissions;
        this.usesPermissions = usesPermissions;
    }
    public final List<String> getUsedPermissionsNames() {
        List<String> usedPermissionList = new ArrayList<>();

        for(UsedPermissionData usedPermissionData: usesPermissions){
            usedPermissionList.add(usedPermissionData.getPermissionData().getName());
        }


        return usedPermissionList;
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel parcel, int i) {
        List var10002 = this.definesPermissions;
        parcel.writeInt(var10002.size());
        Iterator var10000 = var10002.iterator();

        while(var10000.hasNext()) {
            ((PermissionData)var10000.next()).writeToParcel(parcel, 0);
        }

        var10002 = this.usesPermissions;
        parcel.writeInt(var10002.size());
        var10000 = var10002.iterator();

        while(var10000.hasNext()) {
            ((UsedPermissionData)var10000.next()).writeToParcel(parcel, 0);
        }
    }

    public static class Creator implements android.os.Parcelable.Creator {
        @Override
        public Object createFromParcel(Parcel parcel) {
            return null;
        }

        public final Object[] newArray(int size) {
            return new PermissionDataAggregate[size];
        }


    }
}
